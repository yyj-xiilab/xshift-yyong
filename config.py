# âœ… config.py
import argparse

def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--name", required=True, type=str)
    parser.add_argument("--dataset", default="leader_filename_47class", choices=["leader_filename_47class"])
    parser.add_argument("--model_type", default="ViT-B_16")
    parser.add_argument("--pretrained_dir", default="checkpoint/imagenet21k_ViT-B_16.npz")
    parser.add_argument("--output_dir", default="./output")
    parser.add_argument("--img_size", default=256, type=int)
    parser.add_argument("--train_batch_size", default=4, type=int)
    parser.add_argument("--eval_batch_size", default=8, type=int)
    parser.add_argument("--eval_every", default=100, type=int)
    parser.add_argument("--learning_rate", default=3e-2, type=float)
    parser.add_argument("--num_steps", default=5000, type=int)
    parser.add_argument("--decay_type", default="cosine", choices=["cosine", "linear"])
    parser.add_argument("--warmup_steps", default=500, type=int)
    parser.add_argument("--max_grad_norm", default=1.0, type=float)
    parser.add_argument("--local_rank", default=-1, type=int)
    parser.add_argument("--seed", default=42, type=int)
    parser.add_argument("--fp16", action='store_true')
    parser.add_argument("--fp16_opt_level", default='O1', choices=['O0', 'O1', 'O2'])
    parser.add_argument("--loss_scale", default=0, type=float)
    parser.add_argument("--saved_model_name", default='', type=str)
    parser.add_argument("--beta", default=0.1, type=float)
    parser.add_argument("--gamma", default=0.2, type=float)
    parser.add_argument("--theta", default=0.1, type=float)
    parser.add_argument("--use_im", action='store_true')
    parser.add_argument("--use_cp", action='store_true')
    parser.add_argument("--optimal", default=1, type=int)
    parser.add_argument("--gpu_id", default=0, type=int)
    parser.add_argument("--use_lora", action='store_true')
    parser.add_argument("--use_cosine", action='store_true')
    parser.add_argument("--lora_rank", default=16, type=int)
    parser.add_argument("--lora_alpha", default=32, type=int)
    parser.add_argument("--no_cuda", action='store_true')
    parser.add_argument("--weight_decay", default=0.01, type=float)
    parser.add_argument("--adam_epsilon", default=1e-8, type=float)
    parser.add_argument("--gradient_accumulation_steps", default=1, type=int)
    parser.add_argument("--logging_steps", default=50, type=int)
    parser.add_argument("--save_steps", default=1000, type=int)
    parser.add_argument("--evaluate_during_training", action='store_true')
    parser.add_argument("--num_train_epochs", default=3.0, type=float)
    parser.add_argument("--max_steps", default=-1, type=int)
    return parser.parse_args()
